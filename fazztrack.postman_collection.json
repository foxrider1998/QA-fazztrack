{
	"info": {
		"_postman_id": "5d0e3e91-2328-45c8-a65a-00574515d533",
		"name": "fazztrack",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21200405"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"const jsonData = pm.response.json();",
									"",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response data as expected\", function () {",
									"for(i=0;i<(jsonData.data).length;i++)",
									"{",
									"  pm.expect(jsonData.data[i]).to.be.an('object').that.has.all.keys('id', 'email', 'first_name', 'last_name', 'avatar');",
									"",
									"  const expectData = jsonData.data.map(function(elementArray) {",
									"    return elementArray.first_name;",
									"  })",
									"",
									"  pm.expect(expectData).to.not.include(\"\");",
									"}",
									"});",
									"",
									"pm.test(\"response data must have 6 data\", function () {",
									"",
									"      pm.expect(jsonData.data.length).to.eql(6)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base_url}}/api/users?page=2",
							"host": [
								"{{Base_url}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "users update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"const jsonData = pm.response.json();",
									"// pm.collectionVariables.set(\"userId\", jsonData.data[0].id);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"aris\",\n    \"job\": \"student\",\n    \"gen\": \"male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base_url}}/api/users/{{userId}}",
							"host": [
								"{{Base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "users create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"const jsonData = pm.response.json();",
									"// pm.collectionVariables.set(\"userId\", jsonData.data[0].id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"  pm.response.to.have.status(201);",
									"",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(800);",
									"});",
									"",
									"",
									"pm.test(\" fulfilled properties\", function () {",
									"  pm.expect(jsonData).to.be.an('object').that.has.all.keys('name', 'job', 'id', 'createdAt');",
									"});",
									"",
									"",
									"pm.collectionVariables.set(\"userId\", jsonData.id);",
									"pm.collectionVariables.set(\"variable_key\", \"variable_value\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"aris\",\n    \"job\": \"student\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base_url}}/api/users",
							"host": [
								"{{Base_url}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "update user patch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"const jsonData = pm.response.json();",
									"// pm.collectionVariables.set(\"userId\", jsonData.data[0].id);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"",
									"});",
									"",
									"pm.test(\"Response time is less than 2 second\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"",
									"",
									"pm.test(\" fulfilled properties\", function () {",
									"  pm.expect(jsonData).to.be.an('object').that.has.all.keys('name', 'job', 'updatedAt');",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"aris\",\n    \"job\": \"student\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base_url}}/api/users/2",
							"host": [
								"{{Base_url}}"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "update user patch Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"status delete success\", function () {",
									"  pm.response.to.have.status(204);",
									"",
									"});",
									"",
									"pm.test(\"Response time is less than 2 second\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"",
									"pm.test(\"Status code name has No Content\", function () {",
									"    pm.response.to.have.status(\"No Content\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"aris\",\n    \"job\": \"student\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base_url}}/api/users/2",
							"host": [
								"{{Base_url}}"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "variable_key",
			"value": ""
		}
	]
}